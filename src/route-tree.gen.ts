/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as PublicImport } from "./routes/_public"
import { Route as AuthImport } from "./routes/_auth"
import { Route as PublicOidcCallbackImport } from "./routes/_public/oidc-callback"
import { Route as PublicLogoutImport } from "./routes/_public/logout"
import { Route as PublicLoggedOutImport } from "./routes/_public/logged-out"
import { Route as PublicDevImport } from "./routes/_public/dev"
import { Route as AuthdashboardIndexImport } from "./routes/_auth/(dashboard)/index"
import { Route as AuthsettingsSettingsImport } from "./routes/_auth/(settings)/settings"
import { Route as AuthreservationsReservationsImport } from "./routes/_auth/(reservations)/reservations"
import { Route as AuthfleetFleetImport } from "./routes/_auth/(fleet)/fleet"
import { Route as AuthcustomersCustomersImport } from "./routes/_auth/(customers)/customers"
import { Route as AuthagreementsAgreementsImport } from "./routes/_auth/(agreements)/agreements"
import { Route as AuthsettingsSettingsIndexImport } from "./routes/_auth/(settings)/settings.index"
import { Route as AuthreservationsReservationsIndexImport } from "./routes/_auth/(reservations)/reservations.index"
import { Route as AuthreportsReportsIndexImport } from "./routes/_auth/(reports)/reports.index"
import { Route as AuthfleetFleetIndexImport } from "./routes/_auth/(fleet)/fleet.index"
import { Route as AuthcustomersCustomersIndexImport } from "./routes/_auth/(customers)/customers.index"
import { Route as AuthagreementsAgreementsIndexImport } from "./routes/_auth/(agreements)/agreements.index"
import { Route as AuthsettingsSettingsVehiclesAndCategoriesImport } from "./routes/_auth/(settings)/settings.vehicles-and-categories"
import { Route as AuthsettingsSettingsRuntimeConfigurationImport } from "./routes/_auth/(settings)/settings.runtime-configuration"
import { Route as AuthsettingsSettingsRatesAndChargesImport } from "./routes/_auth/(settings)/settings.rates-and-charges"
import { Route as AuthsettingsSettingsProfileImport } from "./routes/_auth/(settings)/settings.profile"
import { Route as AuthsettingsSettingsApplicationImport } from "./routes/_auth/(settings)/settings.application"
import { Route as AuthreservationsReservationsNewImport } from "./routes/_auth/(reservations)/reservations.new"
import { Route as AuthreservationsReservationsReservationIdImport } from "./routes/_auth/(reservations)/reservations.$reservationId"
import { Route as AuthfleetFleetNewImport } from "./routes/_auth/(fleet)/fleet.new"
import { Route as AuthfleetFleetVehicleIdImport } from "./routes/_auth/(fleet)/fleet.$vehicleId"
import { Route as AuthcustomersCustomersNewImport } from "./routes/_auth/(customers)/customers.new"
import { Route as AuthcustomersCustomersCustomerIdImport } from "./routes/_auth/(customers)/customers.$customerId"
import { Route as AuthagreementsAgreementsNewImport } from "./routes/_auth/(agreements)/agreements.new"
import { Route as AuthagreementsAgreementsAgreementIdImport } from "./routes/_auth/(agreements)/agreements.$agreementId"
import { Route as AuthsettingsSettingsApplicationIndexImport } from "./routes/_auth/(settings)/settings.application.index"
import { Route as AuthreportsReportsReportIdIndexImport } from "./routes/_auth/(reports)/reports.$reportId.index"
import { Route as AuthsettingsSettingsApplicationUsersImport } from "./routes/_auth/(settings)/settings.application.users"
import { Route as AuthsettingsSettingsApplicationStoreHoursAndHolidaysImport } from "./routes/_auth/(settings)/settings.application.store-hours-and-holidays"
import { Route as AuthsettingsSettingsApplicationPermissionsAndRolesImport } from "./routes/_auth/(settings)/settings.application.permissions-and-roles"
import { Route as AuthsettingsSettingsApplicationLocationsImport } from "./routes/_auth/(settings)/settings.application.locations"
import { Route as AuthreservationsReservationsReservationIdEditImport } from "./routes/_auth/(reservations)/reservations.$reservationId.edit"
import { Route as AuthreservationsReservationsReservationIdDetailsImport } from "./routes/_auth/(reservations)/reservations.$reservationId._details"
import { Route as AuthfleetFleetVehicleIdEditImport } from "./routes/_auth/(fleet)/fleet.$vehicleId.edit"
import { Route as AuthfleetFleetVehicleIdDetailsImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details"
import { Route as AuthcustomersCustomersCustomerIdEditImport } from "./routes/_auth/(customers)/customers.$customerId.edit"
import { Route as AuthcustomersCustomersCustomerIdDetailsImport } from "./routes/_auth/(customers)/customers.$customerId._details"
import { Route as AuthagreementsAgreementsAgreementIdEditImport } from "./routes/_auth/(agreements)/agreements.$agreementId.edit"
import { Route as AuthagreementsAgreementsAgreementIdCheckInImport } from "./routes/_auth/(agreements)/agreements.$agreementId.check-in"
import { Route as AuthagreementsAgreementsAgreementIdDetailsImport } from "./routes/_auth/(agreements)/agreements.$agreementId._details"
import { Route as AuthreservationsReservationsReservationIdDetailsIndexImport } from "./routes/_auth/(reservations)/reservations.$reservationId._details.index"
import { Route as AuthfleetFleetVehicleIdDetailsIndexImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details.index"
import { Route as AuthcustomersCustomersCustomerIdDetailsIndexImport } from "./routes/_auth/(customers)/customers.$customerId._details.index"
import { Route as AuthagreementsAgreementsAgreementIdDetailsIndexImport } from "./routes/_auth/(agreements)/agreements.$agreementId._details.index"
import { Route as AuthreservationsReservationsReservationIdDetailsSummaryImport } from "./routes/_auth/(reservations)/reservations.$reservationId._details.summary"
import { Route as AuthreservationsReservationsReservationIdDetailsNotesImport } from "./routes/_auth/(reservations)/reservations.$reservationId._details.notes"
import { Route as AuthfleetFleetVehicleIdDetailsSummaryImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details.summary"
import { Route as AuthfleetFleetVehicleIdDetailsReservationsImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details.reservations"
import { Route as AuthfleetFleetVehicleIdDetailsNotesImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details.notes"
import { Route as AuthfleetFleetVehicleIdDetailsAgreementsImport } from "./routes/_auth/(fleet)/fleet.$vehicleId._details.agreements"
import { Route as AuthcustomersCustomersCustomerIdDetailsSummaryImport } from "./routes/_auth/(customers)/customers.$customerId._details.summary"
import { Route as AuthcustomersCustomersCustomerIdDetailsNotesImport } from "./routes/_auth/(customers)/customers.$customerId._details.notes"
import { Route as AuthagreementsAgreementsAgreementIdDetailsSummaryImport } from "./routes/_auth/(agreements)/agreements.$agreementId._details.summary"
import { Route as AuthagreementsAgreementsAgreementIdDetailsNotesImport } from "./routes/_auth/(agreements)/agreements.$agreementId._details.notes"
import { Route as AuthagreementsAgreementsAgreementIdDetailsExchangesImport } from "./routes/_auth/(agreements)/agreements.$agreementId._details.exchanges"

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: "/_public",
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any)

const PublicOidcCallbackRoute = PublicOidcCallbackImport.update({
  path: "/oidc-callback",
  getParentRoute: () => PublicRoute,
} as any)

const PublicLogoutRoute = PublicLogoutImport.update({
  path: "/logout",
  getParentRoute: () => PublicRoute,
} as any)

const PublicLoggedOutRoute = PublicLoggedOutImport.update({
  path: "/logged-out",
  getParentRoute: () => PublicRoute,
} as any)

const PublicDevRoute = PublicDevImport.update({
  path: "/dev",
  getParentRoute: () => PublicRoute,
} as any)

const AuthdashboardIndexRoute = AuthdashboardIndexImport.update({
  path: "/",
  getParentRoute: () => AuthRoute,
} as any)

const AuthsettingsSettingsRoute = AuthsettingsSettingsImport.update({
  path: "/settings",
  getParentRoute: () => AuthRoute,
} as any)

const AuthreservationsReservationsRoute =
  AuthreservationsReservationsImport.update({
    path: "/reservations",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthfleetFleetRoute = AuthfleetFleetImport.update({
  path: "/fleet",
  getParentRoute: () => AuthRoute,
} as any)

const AuthcustomersCustomersRoute = AuthcustomersCustomersImport.update({
  path: "/customers",
  getParentRoute: () => AuthRoute,
} as any)

const AuthagreementsAgreementsRoute = AuthagreementsAgreementsImport.update({
  path: "/agreements",
  getParentRoute: () => AuthRoute,
} as any)

const AuthsettingsSettingsIndexRoute = AuthsettingsSettingsIndexImport.update({
  path: "/",
  getParentRoute: () => AuthsettingsSettingsRoute,
} as any)

const AuthreservationsReservationsIndexRoute =
  AuthreservationsReservationsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthreservationsReservationsRoute,
  } as any)

const AuthreportsReportsIndexRoute = AuthreportsReportsIndexImport.update({
  path: "/reports/",
  getParentRoute: () => AuthRoute,
} as any)

const AuthfleetFleetIndexRoute = AuthfleetFleetIndexImport.update({
  path: "/",
  getParentRoute: () => AuthfleetFleetRoute,
} as any)

const AuthcustomersCustomersIndexRoute =
  AuthcustomersCustomersIndexImport.update({
    path: "/",
    getParentRoute: () => AuthcustomersCustomersRoute,
  } as any)

const AuthagreementsAgreementsIndexRoute =
  AuthagreementsAgreementsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthagreementsAgreementsRoute,
  } as any)

const AuthsettingsSettingsVehiclesAndCategoriesRoute =
  AuthsettingsSettingsVehiclesAndCategoriesImport.update({
    path: "/vehicles-and-categories",
    getParentRoute: () => AuthsettingsSettingsRoute,
  } as any)

const AuthsettingsSettingsRuntimeConfigurationRoute =
  AuthsettingsSettingsRuntimeConfigurationImport.update({
    path: "/runtime-configuration",
    getParentRoute: () => AuthsettingsSettingsRoute,
  } as any)

const AuthsettingsSettingsRatesAndChargesRoute =
  AuthsettingsSettingsRatesAndChargesImport.update({
    path: "/rates-and-charges",
    getParentRoute: () => AuthsettingsSettingsRoute,
  } as any)

const AuthsettingsSettingsProfileRoute =
  AuthsettingsSettingsProfileImport.update({
    path: "/profile",
    getParentRoute: () => AuthsettingsSettingsRoute,
  } as any)

const AuthsettingsSettingsApplicationRoute =
  AuthsettingsSettingsApplicationImport.update({
    path: "/application",
    getParentRoute: () => AuthsettingsSettingsRoute,
  } as any)

const AuthreservationsReservationsNewRoute =
  AuthreservationsReservationsNewImport.update({
    path: "/new",
    getParentRoute: () => AuthreservationsReservationsRoute,
  } as any)

const AuthreservationsReservationsReservationIdRoute =
  AuthreservationsReservationsReservationIdImport.update({
    path: "/$reservationId",
    getParentRoute: () => AuthreservationsReservationsRoute,
  } as any)

const AuthfleetFleetNewRoute = AuthfleetFleetNewImport.update({
  path: "/new",
  getParentRoute: () => AuthfleetFleetRoute,
} as any)

const AuthfleetFleetVehicleIdRoute = AuthfleetFleetVehicleIdImport.update({
  path: "/$vehicleId",
  getParentRoute: () => AuthfleetFleetRoute,
} as any)

const AuthcustomersCustomersNewRoute = AuthcustomersCustomersNewImport.update({
  path: "/new",
  getParentRoute: () => AuthcustomersCustomersRoute,
} as any)

const AuthcustomersCustomersCustomerIdRoute =
  AuthcustomersCustomersCustomerIdImport.update({
    path: "/$customerId",
    getParentRoute: () => AuthcustomersCustomersRoute,
  } as any)

const AuthagreementsAgreementsNewRoute =
  AuthagreementsAgreementsNewImport.update({
    path: "/new",
    getParentRoute: () => AuthagreementsAgreementsRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdRoute =
  AuthagreementsAgreementsAgreementIdImport.update({
    path: "/$agreementId",
    getParentRoute: () => AuthagreementsAgreementsRoute,
  } as any)

const AuthsettingsSettingsApplicationIndexRoute =
  AuthsettingsSettingsApplicationIndexImport.update({
    path: "/",
    getParentRoute: () => AuthsettingsSettingsApplicationRoute,
  } as any)

const AuthreportsReportsReportIdIndexRoute =
  AuthreportsReportsReportIdIndexImport.update({
    path: "/reports/$reportId/",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthsettingsSettingsApplicationUsersRoute =
  AuthsettingsSettingsApplicationUsersImport.update({
    path: "/users",
    getParentRoute: () => AuthsettingsSettingsApplicationRoute,
  } as any)

const AuthsettingsSettingsApplicationStoreHoursAndHolidaysRoute =
  AuthsettingsSettingsApplicationStoreHoursAndHolidaysImport.update({
    path: "/store-hours-and-holidays",
    getParentRoute: () => AuthsettingsSettingsApplicationRoute,
  } as any)

const AuthsettingsSettingsApplicationPermissionsAndRolesRoute =
  AuthsettingsSettingsApplicationPermissionsAndRolesImport.update({
    path: "/permissions-and-roles",
    getParentRoute: () => AuthsettingsSettingsApplicationRoute,
  } as any)

const AuthsettingsSettingsApplicationLocationsRoute =
  AuthsettingsSettingsApplicationLocationsImport.update({
    path: "/locations",
    getParentRoute: () => AuthsettingsSettingsApplicationRoute,
  } as any)

const AuthreservationsReservationsReservationIdEditRoute =
  AuthreservationsReservationsReservationIdEditImport.update({
    path: "/edit",
    getParentRoute: () => AuthreservationsReservationsReservationIdRoute,
  } as any)

const AuthreservationsReservationsReservationIdDetailsRoute =
  AuthreservationsReservationsReservationIdDetailsImport.update({
    id: "/_details",
    getParentRoute: () => AuthreservationsReservationsReservationIdRoute,
  } as any)

const AuthfleetFleetVehicleIdEditRoute =
  AuthfleetFleetVehicleIdEditImport.update({
    path: "/edit",
    getParentRoute: () => AuthfleetFleetVehicleIdRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsRoute =
  AuthfleetFleetVehicleIdDetailsImport.update({
    id: "/_details",
    getParentRoute: () => AuthfleetFleetVehicleIdRoute,
  } as any)

const AuthcustomersCustomersCustomerIdEditRoute =
  AuthcustomersCustomersCustomerIdEditImport.update({
    path: "/edit",
    getParentRoute: () => AuthcustomersCustomersCustomerIdRoute,
  } as any)

const AuthcustomersCustomersCustomerIdDetailsRoute =
  AuthcustomersCustomersCustomerIdDetailsImport.update({
    id: "/_details",
    getParentRoute: () => AuthcustomersCustomersCustomerIdRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdEditRoute =
  AuthagreementsAgreementsAgreementIdEditImport.update({
    path: "/edit",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdCheckInRoute =
  AuthagreementsAgreementsAgreementIdCheckInImport.update({
    path: "/check-in",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdDetailsRoute =
  AuthagreementsAgreementsAgreementIdDetailsImport.update({
    id: "/_details",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdRoute,
  } as any)

const AuthreservationsReservationsReservationIdDetailsIndexRoute =
  AuthreservationsReservationsReservationIdDetailsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthreservationsReservationsReservationIdDetailsRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsIndexRoute =
  AuthfleetFleetVehicleIdDetailsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthfleetFleetVehicleIdDetailsRoute,
  } as any)

const AuthcustomersCustomersCustomerIdDetailsIndexRoute =
  AuthcustomersCustomersCustomerIdDetailsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthcustomersCustomersCustomerIdDetailsRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdDetailsIndexRoute =
  AuthagreementsAgreementsAgreementIdDetailsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdDetailsRoute,
  } as any)

const AuthreservationsReservationsReservationIdDetailsSummaryRoute =
  AuthreservationsReservationsReservationIdDetailsSummaryImport.update({
    path: "/summary",
    getParentRoute: () => AuthreservationsReservationsReservationIdDetailsRoute,
  } as any)

const AuthreservationsReservationsReservationIdDetailsNotesRoute =
  AuthreservationsReservationsReservationIdDetailsNotesImport.update({
    path: "/notes",
    getParentRoute: () => AuthreservationsReservationsReservationIdDetailsRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsSummaryRoute =
  AuthfleetFleetVehicleIdDetailsSummaryImport.update({
    path: "/summary",
    getParentRoute: () => AuthfleetFleetVehicleIdDetailsRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsReservationsRoute =
  AuthfleetFleetVehicleIdDetailsReservationsImport.update({
    path: "/reservations",
    getParentRoute: () => AuthfleetFleetVehicleIdDetailsRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsNotesRoute =
  AuthfleetFleetVehicleIdDetailsNotesImport.update({
    path: "/notes",
    getParentRoute: () => AuthfleetFleetVehicleIdDetailsRoute,
  } as any)

const AuthfleetFleetVehicleIdDetailsAgreementsRoute =
  AuthfleetFleetVehicleIdDetailsAgreementsImport.update({
    path: "/agreements",
    getParentRoute: () => AuthfleetFleetVehicleIdDetailsRoute,
  } as any)

const AuthcustomersCustomersCustomerIdDetailsSummaryRoute =
  AuthcustomersCustomersCustomerIdDetailsSummaryImport.update({
    path: "/summary",
    getParentRoute: () => AuthcustomersCustomersCustomerIdDetailsRoute,
  } as any)

const AuthcustomersCustomersCustomerIdDetailsNotesRoute =
  AuthcustomersCustomersCustomerIdDetailsNotesImport.update({
    path: "/notes",
    getParentRoute: () => AuthcustomersCustomersCustomerIdDetailsRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdDetailsSummaryRoute =
  AuthagreementsAgreementsAgreementIdDetailsSummaryImport.update({
    path: "/summary",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdDetailsRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdDetailsNotesRoute =
  AuthagreementsAgreementsAgreementIdDetailsNotesImport.update({
    path: "/notes",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdDetailsRoute,
  } as any)

const AuthagreementsAgreementsAgreementIdDetailsExchangesRoute =
  AuthagreementsAgreementsAgreementIdDetailsExchangesImport.update({
    path: "/exchanges",
    getParentRoute: () => AuthagreementsAgreementsAgreementIdDetailsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_auth": {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    "/_public": {
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    "/_public/dev": {
      preLoaderRoute: typeof PublicDevImport
      parentRoute: typeof PublicImport
    }
    "/_public/logged-out": {
      preLoaderRoute: typeof PublicLoggedOutImport
      parentRoute: typeof PublicImport
    }
    "/_public/logout": {
      preLoaderRoute: typeof PublicLogoutImport
      parentRoute: typeof PublicImport
    }
    "/_public/oidc-callback": {
      preLoaderRoute: typeof PublicOidcCallbackImport
      parentRoute: typeof PublicImport
    }
    "/_auth/(agreements)/agreements": {
      preLoaderRoute: typeof AuthagreementsAgreementsImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(customers)/customers": {
      preLoaderRoute: typeof AuthcustomersCustomersImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(fleet)/fleet": {
      preLoaderRoute: typeof AuthfleetFleetImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(reservations)/reservations": {
      preLoaderRoute: typeof AuthreservationsReservationsImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(settings)/settings": {
      preLoaderRoute: typeof AuthsettingsSettingsImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(dashboard)/": {
      preLoaderRoute: typeof AuthdashboardIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(agreements)/agreements/$agreementId": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdImport
      parentRoute: typeof AuthagreementsAgreementsImport
    }
    "/_auth/(agreements)/agreements/new": {
      preLoaderRoute: typeof AuthagreementsAgreementsNewImport
      parentRoute: typeof AuthagreementsAgreementsImport
    }
    "/_auth/(customers)/customers/$customerId": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdImport
      parentRoute: typeof AuthcustomersCustomersImport
    }
    "/_auth/(customers)/customers/new": {
      preLoaderRoute: typeof AuthcustomersCustomersNewImport
      parentRoute: typeof AuthcustomersCustomersImport
    }
    "/_auth/(fleet)/fleet/$vehicleId": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdImport
      parentRoute: typeof AuthfleetFleetImport
    }
    "/_auth/(fleet)/fleet/new": {
      preLoaderRoute: typeof AuthfleetFleetNewImport
      parentRoute: typeof AuthfleetFleetImport
    }
    "/_auth/(reservations)/reservations/$reservationId": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdImport
      parentRoute: typeof AuthreservationsReservationsImport
    }
    "/_auth/(reservations)/reservations/new": {
      preLoaderRoute: typeof AuthreservationsReservationsNewImport
      parentRoute: typeof AuthreservationsReservationsImport
    }
    "/_auth/(settings)/settings/application": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(settings)/settings/profile": {
      preLoaderRoute: typeof AuthsettingsSettingsProfileImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(settings)/settings/rates-and-charges": {
      preLoaderRoute: typeof AuthsettingsSettingsRatesAndChargesImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(settings)/settings/runtime-configuration": {
      preLoaderRoute: typeof AuthsettingsSettingsRuntimeConfigurationImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(settings)/settings/vehicles-and-categories": {
      preLoaderRoute: typeof AuthsettingsSettingsVehiclesAndCategoriesImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(agreements)/agreements/": {
      preLoaderRoute: typeof AuthagreementsAgreementsIndexImport
      parentRoute: typeof AuthagreementsAgreementsImport
    }
    "/_auth/(customers)/customers/": {
      preLoaderRoute: typeof AuthcustomersCustomersIndexImport
      parentRoute: typeof AuthcustomersCustomersImport
    }
    "/_auth/(fleet)/fleet/": {
      preLoaderRoute: typeof AuthfleetFleetIndexImport
      parentRoute: typeof AuthfleetFleetImport
    }
    "/_auth/(reports)/reports/": {
      preLoaderRoute: typeof AuthreportsReportsIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(reservations)/reservations/": {
      preLoaderRoute: typeof AuthreservationsReservationsIndexImport
      parentRoute: typeof AuthreservationsReservationsImport
    }
    "/_auth/(settings)/settings/": {
      preLoaderRoute: typeof AuthsettingsSettingsIndexImport
      parentRoute: typeof AuthsettingsSettingsImport
    }
    "/_auth/(agreements)/agreements/$agreementId/_details": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdDetailsImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdImport
    }
    "/_auth/(agreements)/agreements/$agreementId/check-in": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdCheckInImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdImport
    }
    "/_auth/(agreements)/agreements/$agreementId/edit": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdEditImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdImport
    }
    "/_auth/(customers)/customers/$customerId/_details": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdDetailsImport
      parentRoute: typeof AuthcustomersCustomersCustomerIdImport
    }
    "/_auth/(customers)/customers/$customerId/edit": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdEditImport
      parentRoute: typeof AuthcustomersCustomersCustomerIdImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsImport
      parentRoute: typeof AuthfleetFleetVehicleIdImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/edit": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdEditImport
      parentRoute: typeof AuthfleetFleetVehicleIdImport
    }
    "/_auth/(reservations)/reservations/$reservationId/_details": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdDetailsImport
      parentRoute: typeof AuthreservationsReservationsReservationIdImport
    }
    "/_auth/(reservations)/reservations/$reservationId/edit": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdEditImport
      parentRoute: typeof AuthreservationsReservationsReservationIdImport
    }
    "/_auth/(settings)/settings/application/locations": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationLocationsImport
      parentRoute: typeof AuthsettingsSettingsApplicationImport
    }
    "/_auth/(settings)/settings/application/permissions-and-roles": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationPermissionsAndRolesImport
      parentRoute: typeof AuthsettingsSettingsApplicationImport
    }
    "/_auth/(settings)/settings/application/store-hours-and-holidays": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationStoreHoursAndHolidaysImport
      parentRoute: typeof AuthsettingsSettingsApplicationImport
    }
    "/_auth/(settings)/settings/application/users": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationUsersImport
      parentRoute: typeof AuthsettingsSettingsApplicationImport
    }
    "/_auth/(reports)/reports/$reportId/": {
      preLoaderRoute: typeof AuthreportsReportsReportIdIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/(settings)/settings/application/": {
      preLoaderRoute: typeof AuthsettingsSettingsApplicationIndexImport
      parentRoute: typeof AuthsettingsSettingsApplicationImport
    }
    "/_auth/(agreements)/agreements/$agreementId/_details/exchanges": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdDetailsExchangesImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdDetailsImport
    }
    "/_auth/(agreements)/agreements/$agreementId/_details/notes": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdDetailsNotesImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdDetailsImport
    }
    "/_auth/(agreements)/agreements/$agreementId/_details/summary": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdDetailsSummaryImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdDetailsImport
    }
    "/_auth/(customers)/customers/$customerId/_details/notes": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdDetailsNotesImport
      parentRoute: typeof AuthcustomersCustomersCustomerIdDetailsImport
    }
    "/_auth/(customers)/customers/$customerId/_details/summary": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdDetailsSummaryImport
      parentRoute: typeof AuthcustomersCustomersCustomerIdDetailsImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details/agreements": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsAgreementsImport
      parentRoute: typeof AuthfleetFleetVehicleIdDetailsImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details/notes": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsNotesImport
      parentRoute: typeof AuthfleetFleetVehicleIdDetailsImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details/reservations": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsReservationsImport
      parentRoute: typeof AuthfleetFleetVehicleIdDetailsImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details/summary": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsSummaryImport
      parentRoute: typeof AuthfleetFleetVehicleIdDetailsImport
    }
    "/_auth/(reservations)/reservations/$reservationId/_details/notes": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdDetailsNotesImport
      parentRoute: typeof AuthreservationsReservationsReservationIdDetailsImport
    }
    "/_auth/(reservations)/reservations/$reservationId/_details/summary": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdDetailsSummaryImport
      parentRoute: typeof AuthreservationsReservationsReservationIdDetailsImport
    }
    "/_auth/(agreements)/agreements/$agreementId/_details/": {
      preLoaderRoute: typeof AuthagreementsAgreementsAgreementIdDetailsIndexImport
      parentRoute: typeof AuthagreementsAgreementsAgreementIdDetailsImport
    }
    "/_auth/(customers)/customers/$customerId/_details/": {
      preLoaderRoute: typeof AuthcustomersCustomersCustomerIdDetailsIndexImport
      parentRoute: typeof AuthcustomersCustomersCustomerIdDetailsImport
    }
    "/_auth/(fleet)/fleet/$vehicleId/_details/": {
      preLoaderRoute: typeof AuthfleetFleetVehicleIdDetailsIndexImport
      parentRoute: typeof AuthfleetFleetVehicleIdDetailsImport
    }
    "/_auth/(reservations)/reservations/$reservationId/_details/": {
      preLoaderRoute: typeof AuthreservationsReservationsReservationIdDetailsIndexImport
      parentRoute: typeof AuthreservationsReservationsReservationIdDetailsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([
    AuthagreementsAgreementsRoute.addChildren([
      AuthagreementsAgreementsAgreementIdRoute.addChildren([
        AuthagreementsAgreementsAgreementIdDetailsRoute.addChildren([
          AuthagreementsAgreementsAgreementIdDetailsExchangesRoute,
          AuthagreementsAgreementsAgreementIdDetailsNotesRoute,
          AuthagreementsAgreementsAgreementIdDetailsSummaryRoute,
          AuthagreementsAgreementsAgreementIdDetailsIndexRoute,
        ]),
        AuthagreementsAgreementsAgreementIdCheckInRoute,
        AuthagreementsAgreementsAgreementIdEditRoute,
      ]),
      AuthagreementsAgreementsNewRoute,
      AuthagreementsAgreementsIndexRoute,
    ]),
    AuthcustomersCustomersRoute.addChildren([
      AuthcustomersCustomersCustomerIdRoute.addChildren([
        AuthcustomersCustomersCustomerIdDetailsRoute.addChildren([
          AuthcustomersCustomersCustomerIdDetailsNotesRoute,
          AuthcustomersCustomersCustomerIdDetailsSummaryRoute,
          AuthcustomersCustomersCustomerIdDetailsIndexRoute,
        ]),
        AuthcustomersCustomersCustomerIdEditRoute,
      ]),
      AuthcustomersCustomersNewRoute,
      AuthcustomersCustomersIndexRoute,
    ]),
    AuthfleetFleetRoute.addChildren([
      AuthfleetFleetVehicleIdRoute.addChildren([
        AuthfleetFleetVehicleIdDetailsRoute.addChildren([
          AuthfleetFleetVehicleIdDetailsAgreementsRoute,
          AuthfleetFleetVehicleIdDetailsNotesRoute,
          AuthfleetFleetVehicleIdDetailsReservationsRoute,
          AuthfleetFleetVehicleIdDetailsSummaryRoute,
          AuthfleetFleetVehicleIdDetailsIndexRoute,
        ]),
        AuthfleetFleetVehicleIdEditRoute,
      ]),
      AuthfleetFleetNewRoute,
      AuthfleetFleetIndexRoute,
    ]),
    AuthreservationsReservationsRoute.addChildren([
      AuthreservationsReservationsReservationIdRoute.addChildren([
        AuthreservationsReservationsReservationIdDetailsRoute.addChildren([
          AuthreservationsReservationsReservationIdDetailsNotesRoute,
          AuthreservationsReservationsReservationIdDetailsSummaryRoute,
          AuthreservationsReservationsReservationIdDetailsIndexRoute,
        ]),
        AuthreservationsReservationsReservationIdEditRoute,
      ]),
      AuthreservationsReservationsNewRoute,
      AuthreservationsReservationsIndexRoute,
    ]),
    AuthsettingsSettingsRoute.addChildren([
      AuthsettingsSettingsApplicationRoute.addChildren([
        AuthsettingsSettingsApplicationLocationsRoute,
        AuthsettingsSettingsApplicationPermissionsAndRolesRoute,
        AuthsettingsSettingsApplicationStoreHoursAndHolidaysRoute,
        AuthsettingsSettingsApplicationUsersRoute,
        AuthsettingsSettingsApplicationIndexRoute,
      ]),
      AuthsettingsSettingsProfileRoute,
      AuthsettingsSettingsRatesAndChargesRoute,
      AuthsettingsSettingsRuntimeConfigurationRoute,
      AuthsettingsSettingsVehiclesAndCategoriesRoute,
      AuthsettingsSettingsIndexRoute,
    ]),
    AuthdashboardIndexRoute,
    AuthreportsReportsIndexRoute,
    AuthreportsReportsReportIdIndexRoute,
  ]),
  PublicRoute.addChildren([
    PublicDevRoute,
    PublicLoggedOutRoute,
    PublicLogoutRoute,
    PublicOidcCallbackRoute,
  ]),
])

/* prettier-ignore-end */
